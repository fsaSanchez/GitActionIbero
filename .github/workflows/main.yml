name: Deploy React to IIS by runner

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted  # Utiliza el runner auto-hospedado

    steps:
    # Paso para hacer checkout del repositorio
    - name: Check out repository
      uses: actions/checkout@v3

    # Agregar el repositorio a la lista de safe.directory de Git
    - name: Add Git repository to safe.directory
      run: |
        git config --global --add safe.directory C:/actions-runner/_work/GitActionIbero/GitActionIbero

    # Configuración de Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # Instalación de dependencias
    - name: Install dependencies
      run: |
        npm ci

    # Construcción de la aplicación React
    - name: Build React app
      run: npm run build

    # Listado de archivos generados
    - name: List files for debugging
      run: |
        ls -la
        if (-Not (Test-Path dist)) {
          Write-Host "Dist directory not found"
        } else {
          ls -la dist
        }

    # Verificación de directorio de despliegue y copia de archivos
    - name: Ensure deployment directory exists
      run: |
        if (-not (Test-Path "C:\inetpub\DeployActions\")) {
          New-Item -Path "C:\inetpub\DeployActions\" -ItemType Directory
        }

    - name: Copy files to IIS server
      run: |
        xcopy /E /I /Y dist\* C:\inetpub\DeployActions\

    # Notificación de Teams
    - name: Notify Teams
      run: |
        curl -H 'Content-Type: application/json' \
          -d '{"text":"El despliegue de '${{ vars.NOMBRE_PROYECTO }}' ha sido completado exitosamente en el servidor IIS desde GitHub"}' \
          ${{ secrets.TEAMS_WEBHOOK_URL }}
